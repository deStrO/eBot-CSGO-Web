Matchs:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    ip: { type: varchar(50) }
    server_id: { type: integer(20) }
    season_id: { type: integer(20) }
    team_a: { type: integer(20) }
    team_a_flag: { type: varchar(2) }
    team_a_name: { type: varchar(25) }
    team_b: { type: integer(20) }
    team_b_flag: { type: varchar(2) }
    team_b_name: { type: varchar(25) }
    status: { type: integer(2) }
    is_paused: { type: boolean }
    score_a: { type: integer(5) }
    score_b: { type: integer(5) }
    max_round: { type: integer(3), notnull: true }
    rules: { type: varchar(200), notnull: true }
    overtime_startmoney: { type: integer(5) }
    overtime_max_round: { type: integer(3) }
    config_full_score: { type: boolean }
    config_ot: { type: boolean }
    config_streamer: { type: boolean }
    config_knife_round: { type: boolean }
    config_switch_auto: { type: boolean }
    config_auto_change_password: { type: boolean }
    config_password: { type: varchar(50) }
    config_heatmap: { type: boolean }
    config_authkey: { type: varchar(200) }
    enable: { type: boolean }
    map_selection_mode: { type: enum, values: [ bo2, bo3_modea, bo3_modeb, normal ]}
    ingame_enable: { type: boolean }
    current_map: { type: integer(20) }
    force_zoom_match: { type: boolean }
    identifier_id: { type: integer(20) }
    startdate: { type: timestamp }
    auto_start: { type: boolean }
    auto_start_time: { type: integer(3) }
  relations:
    Server: { class: Servers, onDelete: SET NULL, local: server_id, foreign: id }
    TeamA: { class: Teams, local: team_a, foreign: id, onDelete: SET NULL }
    TeamB: { class: Teams, local: team_b, foreign: id, onDelete: SET NULL }
    Map: { class: Maps, onDelete: CASCADE, local: current_map, foreign: id }
    Season: { class: Seasons, onDelete: SET NULL, local: season_id, foreign: id }

Maps:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    match_id: { type: integer(20), notnull: true }
    map_name: { type: varchar(50) }
    score_1: { type: integer(5) }
    score_2: { type: integer(5) }
    current_side: { type: enum, values: [ ct, t ] }
    status: { type: integer(3) }
    maps_for: { type: enum, values: [ default, team1, team2 ]}
    nb_ot: { type: integer(20) }
    identifier_id: { type: integer(20) }
    tv_record_file: { type: varchar(255) }
  relations:
    Match: { class: Matchs, onDelete: CASCADE, local: match_id, foreign: id }

MapsScore:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    map_id: { type: integer(20), notnull: true }
    type_score: { type: enum, values: [ normal, ot ] }
    score1_side1: { type: integer(5) }
    score1_side2: { type: integer(5) }
    score2_side1: { type: integer(5) }
    score2_side2: { type: integer(5) }
  relations:
    Map: { class: Maps, onDelete: CASCADE, local: map_id, foreign: id }

Players:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    match_id: { type: integer(20), notnull: true }
    map_id: { type: integer(20), notnull: true }
    player_key: { type: varchar(255) }
    team: { type: enum, values: [ a,b,other], default: other}
    ip: { type: varchar(255) }
    steamid: { type: varchar(255) }
    first_side: { type: enum, values: [ ct, t, other ] }
    current_side: { type: enum, values: [ ct, t, other ] }
    pseudo: { type: varchar(255) }
    nb_kill: { type: integer(5), default: 0 }
    assist: { type: integer(5), default: 0 }
    death: { type: integer(5), default: 0 }
    point: { type: integer(5), default: 0 }
    hs: { type: integer(5), default: 0 }
    defuse: { type: integer(5), default: 0 }
    bombe: { type: integer(5), default: 0 }
    tk: { type: integer(5), default: 0 }
    nb1: { type: integer(5), default: 0 }
    nb2: { type: integer(5), default: 0 }
    nb3: { type: integer(5), default: 0 }
    nb4: { type: integer(5), default: 0 }
    nb5: { type: integer(5), default: 0 }
    nb1kill: { type: integer(5), default: 0 }
    nb2kill: { type: integer(5), default: 0 }
    nb3kill: { type: integer(5), default: 0 }
    nb4kill: { type: integer(5), default: 0 }
    nb5kill: { type: integer(5), default: 0 }
    pluskill: { type: integer(5), default: 0 }
    firstkill: { type: integer(5), default: 0 }
  relations:
    Match: { class: Matchs, onDelete: CASCADE, local: match_id, foreign: id }
    Map: { class: Maps, onDelete: CASCADE, local: map_id, foreign: id }

PlayersSnapshot:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    player_id: { type: integer(20), notnull: true }
    player_key: { type: varchar(255) }
    first_side: { type: enum, values: [ ct, t, other ] }
    current_side: { type: enum, values: [ ct, t, other ] }
    nb_kill: { type: integer(5), default: 0 }
    assist: { type: integer(5), default: 0 }
    death: { type: integer(5), default: 0 }
    point: { type: integer(5), default: 0 }
    hs: { type: integer(5), default: 0 }
    defuse: { type: integer(5), default: 0 }
    bombe: { type: integer(5), default: 0 }
    tk: { type: integer(5), default: 0 }
    nb1: { type: integer(5), default: 0 }
    nb2: { type: integer(5), default: 0 }
    nb3: { type: integer(5), default: 0 }
    nb4: { type: integer(5), default: 0 }
    nb5: { type: integer(5), default: 0 }
    nb1kill: { type: integer(5), default: 0 }
    nb2kill: { type: integer(5), default: 0 }
    nb3kill: { type: integer(5), default: 0 }
    nb4kill: { type: integer(5), default: 0 }
    nb5kill: { type: integer(5), default: 0 }
    pluskill: { type: integer(5), default: 0 }
    firstkill: { type: integer(5), default: 0 }
    round_id: { type: integer(5) }
  relations:
    Player: { class: Players, onDelete: CASCADE, local: player_id, foreign: id }

Round:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    match_id: { type: integer(20), notnull: true }
    map_id: { type: integer(20), notnull: true }
    event_name: { type: varchar(255) }
    event_text: { type: text }
    event_time: { type: integer(5) }
    kill_id: { type: integer(20) }
    round_id: { type: integer(20) }
  relations:
    Match: { class: Matchs, onDelete: CASCADE, local: match_id, foreign: id }
    Map: { class: Maps, onDelete: CASCADE, local: map_id, foreign: id }
    Kill: { class: PlayerKill, onDelete: SET NULL, local: kill_id, foreign: id }

RoundSummary:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    match_id: { type: integer(20), notnull: true }
    map_id: { type: integer(20), notnull: true }
    bomb_planted: { type: boolean }
    bomb_defused: { type: boolean }
    bomb_exploded: { type: boolean }
    win_type: { type: enum, values: [ bombdefused, bombeexploded, normal, saved], default: normal }
    team_win: { type: enum, values: [ a, b ]}
    ct_win: { type: boolean }
    t_win: { type: boolean }
    score_a: { type: integer(2)}
    score_b: { type: integer(2)}
    best_killer: { type: integer(20) }
    best_killer_nb: { type: integer(5) }
    best_killer_fk: { type: boolean }
    best_action_type: { type: text }
    best_action_param: { type: text }
    backup_file_name: { type: varchar(255) }
    round_id: { type: integer(5) }
  relations:
    Match: { class: Matchs, onDelete: CASCADE, local: match_id, foreign: id }
    Map: { class: Maps, onDelete: CASCADE, local: map_id, foreign: id }
    BestKiller: { class: Players, onDelete: SET NULL, local: best_killer, foreign: id }

PlayerKill:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    match_id: { type: integer(20), notnull: true }
    map_id: { type: integer(20), notnull: true }
    killer_name: { type: varchar(100) }
    killer_id: { type: integer(20) }
    killer_team: { type: varchar(20) }
    killed_name: { type: varchar(100) }
    killed_id: { type: integer(20) }
    killed_team: { type: varchar(20) }
    weapon: { type: varchar(100) }
    headshot: { type: boolean }
    round_id: { type: integer(5) }
  relations:
    Match: { class: Matchs, onDelete: CASCADE, local: match_id, foreign: id }
    Map: { class: Maps, onDelete: CASCADE, local: map_id, foreign: id }
    Killer: { class: Players, onDelete: CASCADE, local: killer_id, foreign: id }
    Killed: { class: Players, onDelete: CASCADE, local: killed_id, foreign: id }

PlayersHeatmap:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    match_id: { type: integer(20), notnull: true }
    map_id: { type: integer(20), notnull: true }
    event_name: { type: varchar(50) }
    event_x: { type: double }
    event_y: { type: double }
    event_z: { type: double }
    player_name: { type: varchar(255) }
    player_id: { type: integer(20) }
    player_team: { type: varchar(20) }
    attacker_x: { type: double }
    attacker_y: { type: double }
    attacker_z: { type: double }
    attacker_name: { type: varchar(255) }
    attacker_id: { type: integer }
    attacker_team: { type: varchar(20) }
    round_id: { type: integer(5) }
    round_time: { type: integer(20) }
  relations:
    Match: { class: Matchs, onDelete: CASCADE, local: match_id, foreign: id }
    Map: { class: Maps, onDelete: CASCADE, local: map_id, foreign: id }
    Player: { class: Players, onDelete: CASCADE, local: player_id, foreign: id }
    Killer: { class: Players, onDelete: SET NULL, local: attacker_id, foreign: id }

Servers:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    ip: { type: varchar(50), notnull: true }
    rcon: { type: varchar(50), notnull: true }
    hostname: { type: varchar(100), notnull: true }
    tv_ip: { type: varchar(100) }

Advertising:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    season_id: { type: integer(20) }
    message: { type: varchar(1000) }
    active: { type: boolean }
  relations:
    Season: { class: Seasons, onDelete: CASCADE, local: season_id, foreign: id }

Teams:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    name: { type: varchar(50), notnull: true }
    shorthandle: { type: varchar(50), notnull: true }
    flag: { type: varchar(2), notnull: true }
    link: { type: varchar(100) }

Seasons:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true }
    name: { type: varchar(50), notnull: true }
    event: { type: varchar(50), notnull: true }
    start: { type: timestamp, notnull: true }
    end: { type: timestamp, notnull: true }
    link: { type: varchar(100) }
    logo: { type: varchar(255) }
    active: { type: boolean }

TeamsInSeasons:
  actAs:
    Timestampable: ~
  columns:
    id: { primary: true, type: integer(20), autoincrement: true  }
    season_id: { type: integer(20) }
    team_id: { type: integer(20) }
  relations:
    Seasons: { class: Seasons, onDelete: CASCADE, local: season_id, foreign: id }
    Teams: { class: Teams, onDelete: CASCADE, local: team_id, foreign: id }