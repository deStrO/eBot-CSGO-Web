# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url:   /
  param: { module: main, action: index }

switch_lang:
  url:   /switch/lang/:langage
  param: { module: language, action: switch }
  allow_empty: false
  requirements:
    sf_method: [post]
    langage: (?:fr|en|de)

sf_guard_signin:
  url:   /login
  param: { module: sfGuardAuth, action: signin }

sf_guard_signout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

sf_guard_password:
  url:   /request_password
  param: { module: sfGuardAuth, action: password }

matchs_current:
  url: /matchs/current
  class: sfRequestRoute
  param: { module: matchs, action: matchsInProgress }
  requirements:
    sf_method: [get]

matchs_current_page:
  url: /matchs/current/:page
  class: sfRequestRoute
  param: { module: matchs, action: matchsInProgress }
  requirements:
    sf_method: [get]
    page: \d+

matchs_archived:
  url: /matchs/archived
  class: sfRequestRoute
  param: { module: matchs, action: matchsArchived }
  requirements:
    sf_method: [get]

matchs_archived_page:
  url: /matchs/archived/:page
  class: sfRequestRoute
  param: { module: matchs, action: matchsArchived }
  requirements:
    sf_method: [get]
    page: \d+

matchs_filters:
  url: /matchs/filter
  class: sfRequestRoute
  param: { module: matchs, action: filters }
  requirements:
    sf_method: [put,post]

matchs_filters_clear:
  url: /matchs/filter/clear
  class: sfRequestRoute
  param: { module: matchs, action: filtersClear }
  requirements:
    sf_method: [get]

matchs_view:
  url: /matchs/view/:id
  class: sfDoctrineRoute
  options: { model: Matchs, type: object}
  param: { module: matchs, action: view }
  requirements:
    id : \d+
    sf_method: [get]

matchs_demo:
  url: /matchs/demo/:id
  class: sfDoctrineRoute
  options: { model: Maps, type: object}
  param: { module: matchs, action: demo }
  requirements:
    id : \d+
    sf_method: [get]

player_stats:
  url: /stats/players/:id
  param: { module: stats, action: playerStat }
  requirements:
    sf_method: [get]
    id: .*

matchs_logs:
  url: /matchs/logs/:id
  class: sfDoctrineRoute
  options: { model: Matchs, type: object}
  param: { module: matchs, action: logs }
  requirements:
    id : \d+
    sf_method: [put,post]

matchs_heatmap_data:
  url: /matchs/heatmap/:id
  class: sfDoctrineRoute
  options: { model: Matchs, type: object}
  param: { module: matchs, action: heatmapData }
  requirements:
    id : \d+
    sf_method: [post]

seasons_index:
    url: /seasons
    param: { module: seasons, action: index }

season_select:
  url: /seasons/select
  class: sfRequestRoute
  param: { module: seasons, action: select }
  requirements:
    sf_method: [get]

stats_index:
  url: /stats
  param: { module: stats, action: index }

stats_maps:
  url: /stats/maps
  param: { module: stats, action: mapsStats }

stats_weapons:
  url: /stats/weapons
  param: { module: stats, action: weaponStats }

stats_filters:
  url: /stats/filter
  class: sfRequestRoute
  param: { module: stats, action: filters }
  requirements:
    sf_method: [put,post]

stats_filters_clear:
  url: /stats/filter/clear
  class: sfRequestRoute
  param: { module: stats, action: filtersClear }
  requirements:
    sf_method: [get]

external_livemap:
  url: /matchs/livemap/:id
  class: sfDoctrineRoute
  options: { model: Matchs, type: object}
  param: { module: matchs, action: externalLivemap }
  requirements:
    id : \d+

external_coverage:
  url: /matchs/coverage/:id
  class: sfDoctrineRoute
  options: { model: Matchs, type: object}
  param: { module: matchs, action: externalCoverage }
  requirements:
    id : \d+

ingame:
  url: /main/ingame
  param: { module: main, action: ingame }

global_stats:
  url: /stats/global
  param: { module: stats, action: global }

# generic rules
# please, remove them by adding more specific rules
default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*
